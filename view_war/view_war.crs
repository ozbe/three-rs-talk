#!/usr/bin/env -S cargo eval --
//! 
//!
//! ```cargo
//! [dependencies]
//! kube = "0.49.0"
//! kube-runtime = "0.49.0"
//! k8s-openapi = { version = "0.11.0", default-features = false, features = ["v1_20"] }
//! tokio = { version = "1.0.1", features = ["macros", "rt-multi-thread"] }
//! webbrowser = "0.5.5"
//! ```
use std::error::Error;
use k8s_openapi::api::core::v1::Service;
use kube::{Api, Client};

const NAMESPACE: &str = "default";
const INGRESS_NAME: &str = "company-news-tomcat";

#[tokio::main]
async fn main() -> Result<(), Box<dyn Error>> {
  let client = Client::try_default().await?;
  let svcs: Api<Service> = Api::namespaced(client, NAMESPACE);
  let svc = svcs.get(INGRESS_NAME).await?;
  let ingress_ip = svc.status.as_ref()
    .and_then(|status| status.load_balancer.as_ref())
    .and_then(|lbs| lbs.ingress.as_ref())
    .and_then(|l| l.first())
    .and_then(|i| i.ip.as_ref())
    .expect("Unable to determine ingress ip");

  webbrowser::open(&format!("http://{}/SampleWebApp/", ingress_ip))?;
  Ok(())
}

